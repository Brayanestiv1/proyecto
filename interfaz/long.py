import hashlib
import json
import os
from . import menu  # Importaci√≥n relativa
# Funci√≥n para encriptar la contrase√±a
def encriptar_contrase√±a(contrase√±a):
    return hashlib.sha256(contrase√±a.encode()).hexdigest()

# Funci√≥n de inicio de sesi√≥n
def iniciar_sesion():
    while True:  # Permitir m√∫ltiples intentos hasta que se logre el inicio de sesi√≥n
        os.system('clear' if os.name != 'nt' else 'cls')
        print("="*60)
        print("            üìö INICIO DE SESI√ìN üìö            ")
        print("="*60)

        usuario = input("Ingrese su usuario: ").strip()

        # Validar que el nombre no contenga n√∫meros
        if any(char.isdigit() for char in usuario):
            print(">>> ‚ùå Error. El nombre de usuario no puede contener n√∫meros.")
            input("Presione enter para intentar de nuevo...")
            continue  # Volver a solicitar el nombre de usuario

        while True:
            contrase√±a_guardada = cargar_contrase√±a()
            contrase√±a = input("Ingrese la contrase√±a: ").strip()
            error_msg = ""

            if encriptar_contrase√±a(contrase√±a) == contrase√±a_guardada:
                print("\n  üéì Acceso concedido. Bienvenido, {}! üéì\n".format(usuario))
                input("Presione enter para ir al menu principal. . .")
                os.system("clear")  # Limpiar la consola despu√©s de ingresar
                return  # Salir de la funci√≥n para mostrar el men√∫
            else:
                error_msg = ">>> ‚ùå Error. Contrase√±a incorrecta."
                print("\r" + " " * len(error_msg) + "\r", end="")  # Limpiar mensaje anterior
                print(error_msg)  # Imprimir mensaje de error
                input("Presione enter para intentar de nuevo...")

# Funci√≥n para cargar la contrase√±a del archivo JSON
def cargar_contrase√±a():
    try:
        with open("data/contrase√±a.json", "r") as archivo:
            datos = json.load(archivo)
            return datos["contrase√±a"]
    except (FileNotFoundError, json.JSONDecodeError):
        # Crear la carpeta si no existe
        os.makedirs("data", exist_ok=True)
        # Guardar la contrase√±a predeterminada
        guardar_contrase√±a("SISGESA")
        # Cargar de nuevo la contrase√±a guardada
        return cargar_contrase√±a()

# Funci√≥n para guardar la contrase√±a en el archivo JSON
def guardar_contrase√±a(contrase√±a):
    try:
        with open("data/contrase√±a.json", "w") as archivo:
            json.dump({"contrase√±a": encriptar_contrase√±a(contrase√±a)}, archivo)
    except Exception as e:
        print(f">>> ‚ö†Ô∏è Error al guardar la contrase√±a: {e}")

# Limpiar la consola antes de iniciar sesi√≥n
os.system("clear")

# Iniciar sesi√≥n
iniciar_sesion()

# Mostrar el men√∫ despu√©s de un inicio de sesi√≥n exitoso
os.system("clear")
menu.mostrar_menu()  # Llama a la funci√≥n mostrar_menu() de 'menu'
